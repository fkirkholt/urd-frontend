html {
    line-height: normal;
}

table#urdgrid thead th {
    position: sticky; 
    position: -webkit-sticky; 
    top: 0; 
    z-index: 10;
    background-clip: padding-box;
    /* Make borders that stick when scrolling tbody */
    outline: 1px solid lightgray; border:none; outline-offset: -0.5px;
}

tr {
    cursor: default;
}

td.truncate { overflow: hidden; text-overflow: ellipsis; width: 100%; max-width: 0;}

tr:focus {
    outline: 0;
    background-color: #F4F4F4;
    border: 1px solid green;
}

tr[data-selected] {
    background-color: #96CCFF;
}

tr[data-selected]:focus {
    background-color: #96CCFF;
}

div.field {
    padding-left: 0.75em;
    margin-left: 2px;
}

/* form label:hover { */
/*     text-overflow: clip; */
/*     white-space: normal; */
/*     word-break: break-all; */
/* } */

.sans-serif {
    font-family: 'Open Sans', sans-serif;
}

.ui-autocomplete {
    max-height: 300px;
    overflow-y: auto;
    overflow-x: hidden;
}

.focus-blue:focus {
    color: blue;
}

.cursor-default:hover {
    cursor: default;
}

.bt--black {
    border-top-color: black !important;
}

.bt-2 {
    border-top-width: 2px;
}

.min-h-0 {
    min-height: 0;
}

.max-h1 {max-height: 1rem;}
.max-h2 {max-height: 2rem;}
.max-h3 {max-height: 3rem;}
.max-h4 {max-height: 5rem;}
.max-h5 {max-height: 8rem;}

.fast-spin {
  -webkit-animation: fa-spin 0.5s infinite linear;
  animation: fa-spin 0.5s infinite linear;
}

.min-w1 {min-width: 1rem;}
.min-w2 {min-width: 2rem;}
.min-w3 {min-width: 4rem;}
.min-w4 {min-width: 8rem;}
.min-w5 {min-width:16rem;}
.min-w6 {min-width:32rem;}
.min-w7 {min-width:48rem;}
.min-w8 {min-width:64rem;}
.min-w9 {min-width:96rem;}

.max-w-100 {max-width: 100%;}
.min-w-100 {min-width: 100%;}

.overflow-wrap {
    overflow-wrap: break-word;
    word-wrap: break-word;
}

.dot {text-decoration-style: dotted}

.jsoneditor {border: thin solid lightgray}

#tooltip {
  background: cornsilk;
  border: 1px solid black;
  border-radius: 5px;
  padding: 5px;
}

select:invalid, input:invalid, textarea:invalid {
  border: red solid 2px;
}

input:focus {
  outline: none;
}

input:focus-visible {
  border: black solid 2px;
}

.cm-editor {max-height: 400px}
.cm-wrap { height: 100% }
.cm-scroller { overflow: auto }

label:after {
    content: attr(data-after);
}

label b:after {
    content: attr(data-after);
    font-weight: normal;
    display: inline-block;
    margin-right: -2px;
}

label b[data-after-color=red]:after {
    content: attr(data-after);
    color: red;
    font-weight: normal;
}

label b[data-after-color=gray]:after {
    content: attr(data-after);
    color: gray;
    font-weight: normal;
}

label b:before {
    content: attr(data-before);
}

ul {
    padding-left: 20px
}

ul > li > p:first-child {
    font-weight: bold
}

ol {
    padding-left: 20px
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.indented-wrapped-line {
    --correction: 0px;
    margin-left: calc(var(--indented));
    text-indent: calc(-1 * var(--indented));
}

.fold > p:first-child { display: block }
.fold.close > * { display: none; }
.fold.open > * { display: block; }

code {
    background-color: #eee;
    padding: 2px 2px;
    border-radius: 3px;
}

pre {
    background-color: #eee;
    padding: 2px 4px;
    border-radius: 3px;
    line-height: 1.3;
}

pre code {
    padding: 2px 0px;
}

mark {
    background-color: inherit;
    padding: 2px 0px;
    border-radius: 3px;
}

ul li:has(> p > input:not(:checked)) {
    padding-left: 6px;
    margin-left: -6px;
}

ul li:has(> p > input:checked) {
    padding-left: 4px;
    margin-left: -4px;
}

ul li:has(> input:checked) {
    padding-left: 4px;
    margin-left: -4px;
}

ul li:has(> input:not(:checked)) {
    padding-left: 6px;
    margin-left: -6px;
}

ul li:has(> p > input:checked)::marker {
  content: "\f046"; /* FontAwesome Unicode */
  font-family: FontAwesome;
}

ul li:has(> p > input:not(:checked))::marker {
  content: "\f096"; /* FontAwesome Unicode */
  font-family: FontAwesome;
}

ul li:has(> input:checked)::marker {
  content: "\f046"; /* FontAwesome Unicode */
  font-family: FontAwesome;
}

ul li:has(> input:not(:checked))::marker {
  content: "\f096"; /* FontAwesome Unicode */
  font-family: FontAwesome;
}

data input {
    display: none;
}
